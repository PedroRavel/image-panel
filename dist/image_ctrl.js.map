{"version":3,"sources":["../src/image_ctrl.js"],"names":["moment","$","_","kbn","config","PanelCtrl","ImageCtrl","$scope","$injector","panelDefaults","legend","show","values","imageWidth","imageHeight","fontSize","fontWeight","font","family","statData","message","image","images","text","title","name","subText","defaults","panel","events","on","onInitEditMode","bind","render","addEditorTab","alreadyExists","forEach","img","push","i","length","splice","scope","elem","$panelContainer","find","console","log","height","bgColor","css","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAOA,Y;;AAEAC,O;;AACAC,O;;AAEAC,S;;AACAC,Y;;AACCC,e,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;2BAEKC,S;;;AACX,2BAAYC,MAAZ,EAAmBC,SAAnB,EAA6B;AAAA;;AAAA,4HACrBD,MADqB,EACdC,SADc;;AAI3B,cAAMC,gBAAgB;AACpBC,oBAAQ;AACNC,oBAAM,IADA,EACM;AACZC,sBAAQ;AAFF,aADY;AAKpBC,wBAAW,GALS;AAMpBC,yBAAY,GANQ;AAOpBC,sBAAU,MAPU;AAQpBC,wBAAY,MARQ;AASpBC,kBAAM,EAAEC,QAAQ,8DAAV,EATc;AAUpBC,sBAAS,EAVW;AAWpBC,qBAAQ,EAXY;AAYpBC,mBAAM,aAZc;AAapBC,oBAAO,CACL,aADK,EAEL,aAFK,EAGL,eAHK,EAIL,cAJK,EAKL,eALK,EAML,kBANK,EAOL,UAPK,EAQL,aARK,CAba;AAuBpBC,kBAAK;AACHC,qBAAM,EADH;AAEHC,oBAAK,EAFF;AAGHC,uBAAQ;AAHL;AAvBe,WAAtB;AA6BAxB,YAAEyB,QAAF,CAAW,MAAKC,KAAhB,EAAuBnB,aAAvB;AACAP,YAAEyB,QAAF,CAAW,MAAKC,KAAL,CAAWlB,MAAtB,EAA8BD,cAAcC,MAA5C;AACA,gBAAKmB,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAgC,MAAKC,cAAL,CAAoBC,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,mBAAf,EAAoC,MAAKG,MAAL,CAAYD,IAAZ,OAApC;;AApC2B;AAuC5B;;;;2CACgB;AACf,iBAAKE,YAAL,CAAkB,SAAlB,EAA4B,gDAA5B,EAA6E,CAA7E;AACD;;;yCAYcb,K,EAAM;AACnB;AACA,gBAAIc,gBAAgB,KAApB;AACA,iBAAKP,KAAL,CAAWN,MAAX,CAAkBc,OAAlB,CAA0B,UAASC,GAAT,EAAa;AACrC,kBAAGA,QAAQhB,KAAX,EAAiB;AACfc,gCAAgB,IAAhB;AACD;AACF,aAJD;AAKA,gBAAG,CAACA,aAAJ,EAAkB;AAChB,mBAAKP,KAAL,CAAWN,MAAX,CAAkBgB,IAAlB,CAAuBjB,KAAvB;AACD;AACF;;;8CAEmBA,K,EAAM;AACxB;AACA,iBAAI,IAAIkB,IAAI,CAAZ,EAAeA,IAAI,KAAKX,KAAL,CAAWN,MAAX,CAAkBkB,MAArC,EAA4CD,GAA5C,EAAgD;AAC9C,kBAAG,KAAKX,KAAL,CAAWN,MAAX,CAAkBiB,CAAlB,MAAyB,KAAKX,KAAL,CAAWP,KAAvC,EAA6C;AAC3C,qBAAKO,KAAL,CAAWN,MAAX,CAAkBmB,MAAlB,CAAyBF,CAAzB,EAA2B,CAA3B;AACA;AACD;AACF;AACF;;;+BAEIG,K,EAAOC,I,EAAM;AAAA;;AAChB,iBAAKd,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAM;;AAE7B,kBAAMc,kBAAkBD,KAAKE,IAAL,CAAU,kBAAV,CAAxB;AACAC,sBAAQC,GAAR,CAAY,OAAKC,MAAjB;AACA,kBAAI,OAAKpB,KAAL,CAAWqB,OAAf,EAAwB;AACtBL,gCAAgBM,GAAhB,CAAoB,kBAApB,EAAwC,OAAKtB,KAAL,CAAWqB,OAAnD;AACD,eAFD,MAEO;AACLL,gCAAgBM,GAAhB,CAAoB,kBAApB,EAAwC,EAAxC;AACD;AACD,aATF;AAWD;;;;QA1F4B7C,S;;;;AA6F/BC,gBAAU6C,WAAV,GAAwB,aAAxB","file":"image_ctrl.js","sourcesContent":["import moment from 'moment';\n\nimport $ from 'jquery';\nimport _ from 'lodash';\n\nimport kbn from 'app/core/utils/kbn';\nimport config from 'app/core/config';\nimport {PanelCtrl} from 'app/plugins/sdk';\n\nexport class ImageCtrl extends PanelCtrl {\n  constructor($scope,$injector){\n    super($scope,$injector);\n\n\n    const panelDefaults = {\n      legend: {\n        show: true, // disable/enable legend\n        values: true\n      },\n      imageWidth:100,\n      imageHeight:100,\n      fontSize: '25px',\n      fontWeight: '10px',\n      font: { family: 'Myriad Set Pro, Helvetica Neue, Helvetica, Arial, sans-serif' },\n      statData:{},\n      message:\"\",\n      image:\"Default.png\",\n      images:[\n        'BankOne.png',\n        'BankTwo.png',\n        'BankThree.png',\n        'MoneyBag.png',\n        'PiggyBank.png',\n        'multiplecard.png',\n        'card.png',\n        'Default.png'\n      ],\n      text:{\n        title:'',\n        name:'',\n        subText:''\n      }\n    }\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel.legend, panelDefaults.legend);\n    this.events.on('init-edit-mode',this.onInitEditMode.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\n\n  }\n  onInitEditMode() {\n    this.addEditorTab('Options','public/plugins/grafana-image-panel/editor.html',2);\n  }\n\n  // increaseSize(){\n  //   this.panel.imageWidth += 10;\n  //   this.panel.imageHeight += 10;\n  // }\n  //\n  // decreaseSize(){\n  //   this.panel.imageWidth -= 10;\n  //   this.panel.imageHeight -= 10;\n  // }\n\n  addImageToList(image){\n    //adds image to list of images if not in list\n    var alreadyExists = false;\n    this.panel.images.forEach(function(img){\n      if(img === image){\n        alreadyExists = true;\n      }\n    })\n    if(!alreadyExists){\n      this.panel.images.push(image);\n    }\n  }\n\n  removeImageFromList(image){\n    //deletes image from list\n    for(var i = 0; i < this.panel.images.length;i++){\n      if(this.panel.images[i] === this.panel.image){\n        this.panel.images.splice(i,1);\n        break;\n      }\n    }\n  }\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n\n      const $panelContainer = elem.find('.panel-container');\n      console.log(this.height)\n      if (this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n     });\n\n  }\n}\n\nImageCtrl.templateUrl = 'module.html';\n"]}